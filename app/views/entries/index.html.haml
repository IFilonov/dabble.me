- title "#{@title} on Dabble Me"
.row
  .col-md-8.col-md-offset-1
    - if current_user.is_free?
      .alert.alert-info.hidden-xs
        =link_to subscribe_path,:class=>"float-left" do
          %button.btn.btn-success Subscribe Now
        %strong Dabble Me PRO
        for $3/mo unlocks changing frequency of emails, adding/editing entries via the web, adding a photo to entries, and plenty more.
      .clearfix

    %h3.visible-sm.visible-xs
      #{@title.upcase.html_safe}
      =link_to "javascript:void(0);", onclick: "$('.j-calendar').slideToggle('fast');", class: "s-toggle-calendar" do
        %i.fa.fa-calendar
  
  .col-xs-11.col-sm-5.col-md-2.s-date-groups.j-calendar
    %h3
      =link_to group_entries_path('all'), class: "#{'active' if current_page?(group_entries_path('all'))}" do
        .s-date-left
          ALL
        .s-date-right
          #{current_user.entries.length}
        .clearfix

    - if (only_images = current_user.entries.only_images.length) > 0
      %h4
        =link_to group_entries_path('photos'), class: "#{'active' if current_page?(group_entries_path('photos'))}" do
          .s-date-left
            PHOTOS
          .s-date-right
            #{only_images}
          .clearfix

    - current_user.entries.group_by{|c| c.date.strftime "%Y" }.each do |year_str,year_entries|
      %h4.s-date-year
        =link_to group_entries_path(year_str), class: "#{'active' if params[:group] == year_str}" do
          .s-date-left
            = year_str.upcase
          .s-date-right
            #{year_entries.length}
          .clearfix

      - year_entries.group_by{|c| c.date.strftime "%b" }.each do |month_str,date_entries|
        .s-date-left
          =link_to entries_calendar_path(day: year_str+"-"+month_str.to_date.strftime('%m')), class: "noline" do
            %i.fa.fa-calendar
          &nbsp;        
        =link_to group_entries_path(year_str, month_str.to_date.strftime('%m')), :class => "#{'active' if params[:group] == year_str && params[:subgroup] == month_str.to_date.strftime('%m')}" do
          .s-date-left
            = month_str.upcase
          .s-date-right
            #{date_entries.length}
          .clearfix

  .col-md-8.col-md-offset-1
    .center
      = paginate @entries

  - @entries.each do |entry|
    %br
    .col-md-8.col-md-offset-1.well{:id => "entry-#{entry.id}"}
      = render partial: 'entries/entry', locals: { entry: entry }

  .col-md-8.col-md-offset-1
    .center
      = paginate @entries